**********************
Парсинг источников xml
**********************

Введение
========
Кто знает что такое xml, парсинг и зачем все это нужно - может спокойно перейти к следующему разделу.
Для всех отстальных - коротко.

Прежде всего - если Вас **не** интересует информация, поиск интересующих данных и извлечение из информации полезных знаний - эта статья Вас вряд ли заинтересует. Сначала советую ознакомиться с этой __ публикацией.

xml - формат хранения данных в структурированном виде. Чтобы понять, что такое парсинг нужно помнить, что 

1. в формате xml удобно *хранить* данные любой сложности и размера. И такой способ хранения данных очень распространен (см. __)
2. извлекать и анализировать данные, сохраненные в формате xml не удобно
3. Если Вы не нашли нужную информацию, сохраненную в xml, можно поискать ее на сайтах в Интернет. Знайте, что любая страница сайта - это источник хранения данных в формате xml (точнее его подвида - html)



Инструменты и алгоритм парсинга
===============================
Именно в таком порядке. Сначала был выбран Python в качестве инструмента разработки парсера, а затем "шишки", "подводные камни" и прикладные задачи, которые должен выполнять парсер помогли определиться с алгоритмом.

Виды источников xml
===================
Наиболее распространенные (востребованные) источники xml можно разделить на три типа.

1. файлы с данными, сохраненными в формате xml
2. страницы сайта, содержащие интересующие данные
3. Новостные ленты, различные API сервисы, предоставляющие по запросу данные в формате xml

Приведем несколько примеров источников каждого типа
* файлы с данными xml
	* наборы открытых данных России http://data.gov.ru/opendata
	* открытый корпус русского языка http://opencorpora.org/?page=downloads
	* база данных ФИАС http://fias.nalog.ru/Updates.aspx
	* справочники 1С ___

* сайты с полезными и интересными данными 
	* сайты различных объявлений (например, http://irr.ru/, https://www.avito.ru/)
	* поиск людей в социальных сетях https://yandex.ru/people
	* рынки и биржевые котировки http://finance.rambler.ru/
* Новостные ленты и API сервисы
	* Новостные информационные агентства (например, https://lenta.ru/rss)
	* геосервисы (например, http://nominatim.openstreetmap.org/)

Парсинг источника каждого типа имеет свои особенности, которые могут снижать эффективность работы парсеров: файлы xml могут быть очень большого размера, страницы сайта могут иметь некорректную разметку...

При написании парсера __ были максимально учтены.

Как работать с парсером
Парсер - это скрипт, написанный на Python.
Для полноценной работы скрипта необходимо предварительно установить пакеты python ....


Как парсить файлы xml
---------------------


Как парсить страницы сайтов в Интернете
---------------------------------------

